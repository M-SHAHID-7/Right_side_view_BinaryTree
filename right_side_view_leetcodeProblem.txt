/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root)
    {
        vector<int> v;
        queue<TreeNode*> q;
        q.push(root);
        if(root == NULL )
        {
            return v;
        }
        while(!q.empty())
        {
        int len = q.size();
     
         
            for(int i= 1; i<= len ;i++)
            {
                   TreeNode*temp = q.front();
                   
                   q.pop();
                if( i == len )
                {
                    v.push_back(temp->val);
                }
                if(temp->left != NULL )
                {
                    q.push(temp->left);
                }
                if(temp->right != NULL )
                {
                    q.push(temp-> right);
                }
                }
          
          
        }
        return v;
        
    }
};